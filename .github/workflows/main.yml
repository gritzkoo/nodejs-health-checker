name: test
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
        redis-version: [4, 5, 6]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Configure Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start Redis
        uses: supercharge/redis-github-action@1.1.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - name: Sets up a Memcached server
        uses: niden/actions-memcached@v7

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install npm in version ${{ matrix.node-version }}
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Run test in version ${{ matrix.node-version }}
        run: npm run test:coverage
        env:
          CI: true

      - name: upload coverage artifact v${{ matrix.node-version }}
        uses: actions/upload-artifact@v2
        with:
          name: coveragev-${{ matrix.node-version }}
          path: coverage/lcov.info

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: coveragev-12.x
          path: coverage
      - name: Generate coverage in coverall
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build application
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: 12.x-${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install NPM
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Build application
        run: npm run build

      - name: Generate dist artifact v${{ matrix.node-version }}
        uses: actions/upload-artifact@v2
        with:
          name: dist-folder
          path: dist/**/*
          if-no-files-found: error

  publish:
    name: NPM package publish
    needs:
      - build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist-folder
          path: dist
      - name: Publish
        uses: mikeal/merge-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
